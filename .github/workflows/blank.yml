name: "Artifactory Generic OIDC Multi-Job"

on:
  workflow_dispatch:
  push:

env:
  OIDC_PROVIDER: 'manu-new'
  OIDC_AUDIENCE: 'newmanu'
  JF_URL: "https://hts2.jfrog.io"

permissions:
  contents: read
  id-token: write

jobs:
  publish-artifact:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 1: Set up JFrog CLI with OIDC
      - name: Set up JFrog CLI with OIDC
        id: jfrog_setup
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ env.JF_URL }}
        with:
          oidc-provider-name: ${{ env.OIDC_PROVIDER }}
          oidc-audience: ${{ env.OIDC_AUDIENCE }}

      # Step 2: Archive Terraform Module
      - name: Archive Terraform Module
        run: |
          MODULE_VERSION=${{ github.ref_name }}
          MODULE_NAME='vpc'
          MODULE_NAMESPACE='myorg'
          ZIP_FILE="${MODULE_NAME}-aws-${MODULE_VERSION}.zip"
          zip -r $ZIP_FILE . -x '*.git*'
          echo "ZIPPING complete. File: $ZIP_FILE"
          echo "MODULE_NAMESPACE=$MODULE_NAMESPACE" >> $GITHUB_ENV
          echo "MODULE_NAME=$MODULE_NAME" >> $GITHUB_ENV
          echo "MODULE_VERSION=$MODULE_VERSION" >> $GITHUB_ENV
          echo "ZIP_FILE=$ZIP_FILE" >> $GITHUB_ENV
          ls -la $ZIP_FILE

      # Step 3: Publish Terraform Module to Artifactory
      - name: Publish Terraform Module to Artifactory
        run: |
          jf rt u ${{ env.ZIP_FILE }} manu-terra-module/${{ env.MODULE_NAMESPACE }}/${{ env.MODULE_NAME }}/aws/${{ env.MODULE_VERSION }}/

      # Step 4: Publish Build Info
      - name: Publish Build Info
        run: |
          jf rt build-collect-env
          jf rt build-add-git
          jf rt build-publish

      # Step 5: Create a basic main.tf for testing module resolution
      - name: Create main.tf for testing
        run: |
          echo "Module URL: ${{ env.JF_URL }}/manu-terra-module__${{ env.MODULE_NAMESPACE }}/${{ env.MODULE_NAME }}/aws"
          cat <<EOF > main.tf
          module "vpc" {
            source  = "hts2.jfrog.io/manu-terra-module__${{ env.MODULE_NAMESPACE }}/${{ env.MODULE_NAME }}/aws"
            version = "${{ env.MODULE_VERSION }}"
          }
          EOF
          echo "Created main.tf:"
          cat main.tf

      # Step 6: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      # Step 7: Configure Terraform Authentication (automatic private registry login)
      - name: Configure Terraform Authentication
        env:
          TF_TOKEN_HTS2_JFROG_IO: ${{ steps.jfrog_setup.outputs.jfrog_access_token }}
        run: |
          if [ -z "${{ steps.jfrog_setup.outputs.jfrog_access_token }}" ]; then
            echo "❌ JFrog OIDC token not received — check jfrog/setup-jfrog-cli outputs."
            exit 1
          fi
          echo "✅ Terraform token configured for hts2.jfrog.io via TF_TOKEN_HTS2_JFROG_IO."

      # Step 8: Initialize and validate Terraform
      - name: Terraform Init & Validate
        run: |
          terraform init -upgrade
          terraform validate
